name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ created ]


jobs:
  style:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install black isort
    - name: Checking style
      run: |
        black ./koreanbots --check
        isort ./koreanbots --check --profile=black

  type:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        sudo npm install -g pyright
        python -m pip install -r requirements.txt
        python -m pip install mypy
    - name: Install integrations
      run: |
        python -m pip install git+https://github.com/rapptz/discord.py
        python -m pip install dico nextcord disnake
    - name: Checking type annotations
      run: |
        mypy ./koreanbots --strict
        pyright ./koreanbots --outputjson

  build:
    runs-on: ubuntu-latest
    needs: [ style, type ]
    strategy:
      matrix:
        python-version: [ 3.8, 3.9 ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov pytest-asyncio
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        pytest --cov=koreanbots --cov-report=xml
    - name: Codecov
      uses: codecov/codecov-action@v1

  deploy:
    runs-on: ubuntu-latest
    needs: [ style, type, build ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*